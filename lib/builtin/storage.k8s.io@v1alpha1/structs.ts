// Autogenerated Schema file for StorageV1alpha1
import * as c from "../../common.ts";

import * as MetaV1 from "../meta@v1/structs.ts";
type ListOf<T> = {
  metadata: MetaV1.ListMeta;
  items: Array<T>;
};

/** VolumeAttributesClass represents a specification of mutable volume attributes defined by the CSI driver. The class can be specified during dynamic provisioning of PersistentVolumeClaims, and changed in the PersistentVolumeClaim spec after provisioning. */
export interface VolumeAttributesClass {
  apiVersion?: "storage.k8s.io/v1alpha1";
  kind?: "VolumeAttributesClass";
  driverName: string;
  metadata?: MetaV1.ObjectMeta | null;
  parameters?: Record<string,string> | null;
}
export function toVolumeAttributesClass(input: c.JSONValue): VolumeAttributesClass & c.ApiKind {
  const obj = c.checkObj(input);
  return {
    ...c.assertOrAddApiVersionAndKind(obj, "storage.k8s.io/v1alpha1", "VolumeAttributesClass"),
    driverName: c.checkStr(obj["driverName"]),
    metadata: c.readOpt(obj["metadata"], MetaV1.toObjectMeta),
    parameters: c.readOpt(obj["parameters"], x => c.readMap(x, c.checkStr)),
  }}
export function fromVolumeAttributesClass(input: VolumeAttributesClass): c.JSONValue {
  return {
    ...c.assertOrAddApiVersionAndKind(input, "storage.k8s.io/v1alpha1", "VolumeAttributesClass"),
    ...input,
    metadata: input.metadata != null ? MetaV1.fromObjectMeta(input.metadata) : undefined,
  }}

/** VolumeAttributesClassList is a collection of VolumeAttributesClass objects. */
export interface VolumeAttributesClassList extends ListOf<VolumeAttributesClass> {
  apiVersion?: "storage.k8s.io/v1alpha1";
  kind?: "VolumeAttributesClassList";
};
export function toVolumeAttributesClassList(input: c.JSONValue): VolumeAttributesClassList & c.ApiKind {
  const obj = c.checkObj(input);
  return {
    ...c.assertOrAddApiVersionAndKind(obj, "storage.k8s.io/v1alpha1", "VolumeAttributesClassList"),
    metadata: MetaV1.toListMeta(obj.metadata),
    items: c.readList(obj.items, toVolumeAttributesClass),
  }}
