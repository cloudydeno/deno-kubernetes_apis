// Autogenerated Schema file for AuthenticationV1beta1
import * as c from "../../common.ts";

import * as AuthenticationV1 from "../authentication.k8s.io@v1/structs.ts";
import * as MetaV1 from "../meta@v1/structs.ts";
type ListOf<T> = {
  metadata: MetaV1.ListMeta;
  items: Array<T>;
};

/** SelfSubjectReview contains the user information that the kube-apiserver has about the user making this request. When using impersonation, users will receive the user info of the user being impersonated.  If impersonation or request header authentication is used, any extra keys will have their case ignored and returned as lowercase. */
export interface SelfSubjectReview {
  apiVersion?: "authentication.k8s.io/v1beta1";
  kind?: "SelfSubjectReview";
  metadata?: MetaV1.ObjectMeta | null;
  status?: SelfSubjectReviewStatus | null;
}
export function toSelfSubjectReview(input: c.JSONValue): SelfSubjectReview & c.ApiKind {
  const obj = c.checkObj(input);
  return {
    ...c.assertOrAddApiVersionAndKind(obj, "authentication.k8s.io/v1beta1", "SelfSubjectReview"),
    metadata: c.readOpt(obj["metadata"], MetaV1.toObjectMeta),
    status: c.readOpt(obj["status"], toSelfSubjectReviewStatus),
  }}
export function fromSelfSubjectReview(input: SelfSubjectReview): c.JSONValue {
  return {
    ...c.assertOrAddApiVersionAndKind(input, "authentication.k8s.io/v1beta1", "SelfSubjectReview"),
    ...input,
    metadata: input.metadata != null ? MetaV1.fromObjectMeta(input.metadata) : undefined,
    status: input.status != null ? fromSelfSubjectReviewStatus(input.status) : undefined,
  }}

/** SelfSubjectReviewStatus is filled by the kube-apiserver and sent back to a user. */
export interface SelfSubjectReviewStatus {
  userInfo?: AuthenticationV1.UserInfo | null;
}
export function toSelfSubjectReviewStatus(input: c.JSONValue): SelfSubjectReviewStatus {
  const obj = c.checkObj(input);
  return {
    userInfo: c.readOpt(obj["userInfo"], AuthenticationV1.toUserInfo),
  }}
export function fromSelfSubjectReviewStatus(input: SelfSubjectReviewStatus): c.JSONValue {
  return {
    ...input,
    userInfo: input.userInfo != null ? AuthenticationV1.fromUserInfo(input.userInfo) : undefined,
  }}
